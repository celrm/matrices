var _user$project$State$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$State$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Introducir':
				var x = A2(
					_elm_lang$core$List$map,
					function (_p1) {
						return A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toInt(_p1));
					},
					_elm_lang$core$String$words(_p0._0));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							serie: (_elm_lang$core$Native_Utils.cmp(
								_elm_lang$core$List$length(x),
								100) > 0) ? model.serie : x
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeepLong':
				var n = A2(
					_elm_lang$core$Result$withDefault,
					12,
					_elm_lang$core$String$toInt(_p0._0));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							longitud: A3(_elm_lang$core$Basics$clamp, 1, 100, n)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Aleatorio':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Types$Permutar,
						_elm_community$random_extra$Random_List$shuffle(
							A2(_elm_lang$core$List$range, 0, model.longitud - 1)))
				};
			case 'Permutar':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{serie: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SwitchNum':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{numeracion: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{sintaxis: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$State$init = {
	ctor: '_Tuple2',
	_0: {
		serie: {
			ctor: '::',
			_0: 4,
			_1: {
				ctor: '::',
				_0: 5,
				_1: {
					ctor: '::',
					_0: 7,
					_1: {
						ctor: '::',
						_0: 1,
						_1: {
							ctor: '::',
							_0: 6,
							_1: {
								ctor: '::',
								_0: 3,
								_1: {
									ctor: '::',
									_0: 8,
									_1: {
										ctor: '::',
										_0: 2,
										_1: {
											ctor: '::',
											_0: 11,
											_1: {
												ctor: '::',
												_0: 0,
												_1: {
													ctor: '::',
													_0: 9,
													_1: {
														ctor: '::',
														_0: 10,
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		numeracion: _user$project$Types$Tradicional,
		sintaxis: _user$project$Types$Simple,
		longitud: 12
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
